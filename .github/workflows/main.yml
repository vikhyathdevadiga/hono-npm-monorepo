name: Build and Deploy to Vercel

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      NODE_OPTIONS: "--max-old-space-size=4096"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Install Vercel CLI
        run: npm install -g vercel@latest

      - name: Build Project
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }} --yes
        env:
          VERCEL_EXPERIMENTAL_STANDALONE_BUILD: "1"

      - name: Move Prebuilt Output to build-output
        run: |
            mkdir -p build-output
            mv .vercel build-output/

      - name: Deploy from build-output
        run: |
          cd build-output
          vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }} --yes

      # - name: Pack
      #   run: tar -cvf artifact.tar .vercel

      # # Upload with absolute path from repository root
      # - name: Upload .vercel folder
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: vercel-build-artifact
      #     path: artifact.tar
      #     if-no-files-found: error
      #     retention-days: 1
      #     include-hidden-files: true

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
  #   env:
  #     NODE_OPTIONS: "--max-old-space-size=4096"
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: "20"

  #     - name: Install Vercel CLI
  #       run: npm install -g vercel@latest

  #     # Download the .vercel artifact
  #     - name: Download .vercel folder
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: vercel-build-artifact

  #     - name: Unpack .vercel folder
  #       run: |
  #         if [ -f "artifact.tar" ]; then
  #           echo "Extracting artifact.tar"
  #           tar -xvf artifact.tar
  #         else
  #           echo "ERROR: artifact.tar not found"
  #           exit 1
  #         fi
  #     - name: Deploy to Vercel
  #       run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }} --yes
